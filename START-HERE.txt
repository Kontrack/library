================================================================================
                    🚀 도서관 관리 시스템 - 시작 가이드 🚀
================================================================================

환영합니다! 도서관 관리 시스템 프로젝트입니다.

이 파일은 프로젝트를 처음 접하는 분들을 위한 빠른 참조 가이드입니다.


┌──────────────────────────────────────────────────────────────────────────┐
│ 📚 무엇을 만들었나요?                                                     │
└──────────────────────────────────────────────────────────────────────────┘

✅ 완성된 프론트엔드 웹사이트
   - 로그인/회원가입 페이지
   - 서적 검색 및 목록
   - 인기 도서 차트
   - 대출/반납 관리
   - 관리자 페이지

⏳ 아직 구현되지 않은 것
   - 백엔드 API (다음 단계)
   - 실제 데이터베이스 연동 (다음 단계)


┌──────────────────────────────────────────────────────────────────────────┐
│ 🎯 어떻게 시작하나요?                                                     │
└──────────────────────────────────────────────────────────────────────────┘

Windows 사용자:
  1. deploy.bat 더블클릭
  2. 옵션 1번 선택 (독립 Docker 실행)
  3. http://localhost:8080 접속

Linux/Mac 사용자:
  1. ./deploy.sh 실행
  2. 옵션 1번 선택
  3. http://localhost:8080 접속

또는 Docker Compose 직접 실행:
  docker-compose up -d


┌──────────────────────────────────────────────────────────────────────────┐
│ 📖 어떤 문서를 읽어야 하나요?                                              │
└──────────────────────────────────────────────────────────────────────────┘

처음 사용하시나요?
  → QUICKSTART.txt (5분 빠른 시작)

자세한 배포 방법이 궁금하신가요?
  → README-DEPLOYMENT.txt (상세 배포 가이드)

프로젝트 전체 구조가 궁금하신가요?
  → PROJECT-SUMMARY.txt (프로젝트 요약)

Git/GitHub 사용법을 모르시나요?
  → GitHub사용가이드.md (Git 완벽 가이드)

간단한 개요만 보고 싶으신가요?
  → README.txt (프로젝트 개요)


┌──────────────────────────────────────────────────────────────────────────┐
│ 🔧 프로덕션 서버에 배포하려면?                                             │
└──────────────────────────────────────────────────────────────────────────┘

1단계: 파일 업로드
  scp -r public/ user@server:/path/to/destination

2단계: Nginx 설정 추가
  - nginx-library-config.txt 참조
  - library.kontrack.kr 설정 추가

3단계: SSL 인증서 발급
  sudo certbot certonly --nginx -d library.kontrack.kr

4단계: Nginx 재시작
  sudo nginx -t && sudo systemctl reload nginx


┌──────────────────────────────────────────────────────────────────────────┐
│ 🆘 문제가 발생했나요?                                                     │
└──────────────────────────────────────────────────────────────────────────┘

포트 8080이 이미 사용 중?
  → docker-compose.yml의 포트를 변경하세요 (예: 8081:80)

Docker가 실행되지 않음?
  → Docker Desktop을 실행하세요

Nginx 오류?
  → sudo nginx -t (설정 테스트)
  → sudo tail -f /var/log/nginx/error.log (로그 확인)

로그인이 안 됨?
  → 아무 값이나 입력하고 로그인 버튼을 누르면 됩니다 (백엔드 미구현)


┌──────────────────────────────────────────────────────────────────────────┐
│ 💡 유용한 명령어                                                          │
└──────────────────────────────────────────────────────────────────────────┘

Docker 관련:
  docker-compose ps                 # 상태 확인
  docker-compose logs -f            # 로그 보기
  docker-compose restart            # 재시작
  docker-compose down               # 중지

웹사이트 테스트:
  curl http://localhost:8080        # 접속 테스트


┌──────────────────────────────────────────────────────────────────────────┐
│ 📁 주요 파일 위치                                                         │
└──────────────────────────────────────────────────────────────────────────┘

웹 페이지:
  public/index.html         → 로그인 페이지
  public/register.html      → 회원가입 페이지
  public/main.html          → 메인 페이지

스타일:
  public/css/common.css     → 공통 스타일
  public/css/login.css      → 로그인 스타일
  public/css/register.css   → 회원가입 스타일
  public/css/main.css       → 메인 스타일

JavaScript:
  public/js/login.js        → 로그인 로직
  public/js/register.js     → 회원가입 로직
  public/js/main.js         → 메인 로직

설정:
  docker-compose.yml        → Docker 설정
  nginx.conf                → Nginx 설정
  .gitignore                → Git 제외 파일


┌──────────────────────────────────────────────────────────────────────────┐
│ ⚙️ 환경 설정                                                              │
└──────────────────────────────────────────────────────────────────────────┘

포트:
  3307    → MySQL (library)
  8080    → Nginx (독립 실행 시)
  80/443  → 프로덕션 (library.kontrack.kr)

도메인:
  개발:   http://localhost:8080
  프로덕션: https://library.kontrack.kr


┌──────────────────────────────────────────────────────────────────────────┐
│ 🎨 디자인 테마                                                            │
└──────────────────────────────────────────────────────────────────────────┘

색상:
  Primary:   #4A90E2 (파란색)
  Secondary: #50C878 (초록색)
  Danger:    #E74C3C (빨간색)
  Warning:   #F39C12 (주황색)

특징:
  ✓ 모던하고 깔끔한 UI
  ✓ 반응형 디자인 (모바일, 태블릿, 데스크톱)
  ✓ 부드러운 애니메이션
  ✓ 사용자 친화적


┌──────────────────────────────────────────────────────────────────────────┐
│ 📝 다음 할 일                                                             │
└──────────────────────────────────────────────────────────────────────────┘

1. ☐ 데이터베이스 스키마 설계 (ER Diagram)
2. ☐ 백엔드 API 개발
3. ☐ 프론트엔드-백엔드 연동
4. ☐ 실제 인증 시스템 구현
5. ☐ 테스트 및 디버깅
6. ☐ 프로덕션 배포


┌──────────────────────────────────────────────────────────────────────────┐
│ 📞 추가 도움말                                                            │
└──────────────────────────────────────────────────────────────────────────┘

모든 .md 파일은 Git에서 제외됩니다 (.gitignore 설정됨)

Windows에서 .sh 파일은 실행할 수 없습니다.
  → .bat 파일을 사용하세요

Linux/Mac에서 .bat 파일은 실행할 수 없습니다.
  → .sh 파일을 사용하세요


================================================================================
                        즐거운 개발 되세요! 🎉
================================================================================

다음 문서: QUICKSTART.txt 또는 README.txt

