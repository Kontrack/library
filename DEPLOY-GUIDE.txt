================================================================================
                        배포 가이드 (간단 버전)
================================================================================

GitHub: https://github.com/Kontrack/library
Domain: https://library.kontrack.kr

================================================================================
📋 배포 순서 (처음 1회)
================================================================================

1단계: 스크립트 실행
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  chmod +x *.sh
  ./deploy.sh
  → 옵션 1 선택 (프로덕션 배포)

  자동 실행 내용:
  ✓ public 폴더를 /usr/share/nginx/html/library/ 로 복사
  ✓ MySQL 컨테이너 시작 (포트 3307)


2단계: Nginx 설정 추가 (수동)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # 기존 Nginx 설정 열기
  sudo nano /etc/nginx/nginx.conf

  # nginx-library-config.txt 파일의 내용을 복사해서
  # http { ... } 블록 내 마지막 server 블록 다음에 붙여넣기
  
  내용:
  - HTTP → HTTPS 리다이렉트 (80 → 443)
  - HTTPS server 블록
  - SSL 인증서 경로 (이미 발급됨)
  - root /usr/share/nginx/html/library;

  # 저장 후 종료 (Ctrl+O, Enter, Ctrl+X)


3단계: Nginx 테스트 및 재시작
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # 설정 테스트
  sudo nginx -t

  # OK 나오면 재시작
  sudo systemctl reload nginx


4단계: 확인
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # 상태 확인
  ./health.sh

  # 웹 접속
  https://library.kontrack.kr


================================================================================
🔄 코드 업데이트 (평소)
================================================================================

  # 로컬에서 수정 후
  git push

  # 서버에서 (자동으로 웹 파일 복사 + MySQL 재시작)
  ./update.sh


================================================================================
📝 nginx-library-config.txt 내용
================================================================================

다음 내용을 기존 nginx.conf의 http 블록 내에 추가:

# 도서관 웹사이트 (library.kontrack.kr) - HTTP → HTTPS 리다이렉트
server {
    listen 80;
    server_name library.kontrack.kr;
    return 301 https://$server_name$request_uri;
}

# 도서관 웹사이트 (library.kontrack.kr) - HTTPS
server {
    listen 443 ssl http2;
    server_name library.kontrack.kr;

    # SSL 인증서 (이미 발급됨)
    ssl_certificate /etc/letsencrypt/live/library.kontrack.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/library.kontrack.kr/privkey.pem;

    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 루트 디렉토리
    root /usr/share/nginx/html/library;
    index index.html;

    # 정적 파일 캐싱
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # SPA 라우팅
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 404 에러 페이지
    error_page 404 /index.html;
}


================================================================================
✅ 체크리스트
================================================================================

최초 배포:
  □ chmod +x *.sh
  □ ./deploy.sh (옵션 1)
  □ sudo nano /etc/nginx/nginx.conf
  □ nginx-library-config.txt 내용 붙여넣기
  □ sudo nginx -t
  □ sudo systemctl reload nginx
  □ ./health.sh 로 확인
  □ https://library.kontrack.kr 접속 테스트

코드 업데이트:
  □ git push (로컬)
  □ ./update.sh (서버)
  □ ./health.sh 로 확인


================================================================================
🔍 확인 명령어
================================================================================

# 웹 파일 위치
ls -la /usr/share/nginx/html/library/

# Nginx 설정 확인
sudo nginx -t
cat /etc/nginx/nginx.conf | grep library

# MySQL 확인
docker-compose ps library-mysql

# 웹 접속 테스트
curl -I https://library.kontrack.kr


================================================================================
❓ FAQ
================================================================================

Q: nginx-library-config.txt를 어디에 붙여넣나요?
A: 기존 nginx.conf의 http { } 블록 내, 마지막 server 블록 다음에 붙여넣으세요.

Q: SSL 인증서는?
A: 이미 발급되어 있으므로 별도 작업 불필요합니다.

Q: 포트는?
A: HTTP 80, HTTPS 443 (웹), MySQL 3307

Q: 업데이트 후 Nginx도 재시작해야 하나요?
A: 아니요. update.sh는 웹 파일만 복사하고 MySQL만 재시작합니다.
   프론트엔드 수정이므로 Nginx 재시작 불필요합니다.


================================================================================
                            배포 가이드 끝
================================================================================

