# ===================================================================
# 기존 nginx.conf에 추가할 설정 (library.kontrack.kr)
# 
# 이 설정을 기존 nginx.conf의 http 블록 내에 추가하세요.
# 위치: 마지막 server 블록 다음에 추가
# ===================================================================

# 도서관 웹사이트 (library.kontrack.kr) - HTTP → HTTPS 리다이렉트
server {
    listen 80;
    server_name library.kontrack.kr;
    return 301 https://$server_name$request_uri;
}

# 도서관 웹사이트 (library.kontrack.kr) - HTTPS
server {
    listen 443 ssl http2;
    server_name library.kontrack.kr;

    # SSL 인증서 (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/library.kontrack.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/library.kontrack.kr/privkey.pem;

    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 루트 디렉토리
    root /usr/share/nginx/html/library;
    index index.html;

    # 정적 파일 캐싱
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # 루트 경로 → /login 리다이렉트
    location = / {
        return 301 /login;
    }

    # 로그인 페이지
    location = /login {
        try_files /index.html =404;
    }

    # 회원가입 페이지
    location = /register {
        try_files /register.html =404;
    }

    # 메인 페이지
    location = /main {
        try_files /main.html =404;
    }

    # API 프록시 (백엔드 연결)
    location /api/ {
        proxy_pass http://library-backend:3000/api/;
        proxy_http_version 1.1;
        
        # 헤더 전달
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃 설정
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        proxy_connect_timeout 60s;
    }

    # 기타 경로는 404
    location / {
        return 404;
    }

    # 404 에러 페이지 → 로그인으로 리다이렉트
    error_page 404 /login;
}

